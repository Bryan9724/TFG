@model RPA.Models.EditRPA
@{
    ViewData["Title"] = "Home Page";
}

<div class="col-3 offset-1 row">


    <h4 class="mb-3">Upload RPA</h4>
    <form class="needs-validation" id="formRPA">
        <input type="hidden" name="idRPA" id="idRPA" value="@Model.rPAGet.idRPA" />
        <div class="row g-3">
            <div class="col-sm-6">
                <label for="NameRPA" class="form-label">Name RPA:</label>
                <input type="text" class="form-control" id="NameRPA" name="NameRPA" placeholder="Name:" value="@Model.rPAGet.nameRPA" required="" tabindex="1">
                <div class="invalid-feedback">
                    Valid first name is required.
                </div>
            </div>

            <div class="col-sm-6">
                <label for="dateFirstExecution" class="form-label">Date first execution:</label>
                <input type="date" class="form-control" id="dateFirstExecution" name="dateFirstExecution" placeholder="Date First Execution:" value="@Model.rPAGet.dateFirstExecution" required="" tabindex="2">
                <div class="invalid-feedback">
                    Valid last name is required.
                </div>
            </div>
            <div class="col-sm-12">
                <label for="FileRPA" class="form-label">File RPA:</label>
                <input type="file" class="form-control" id="FileRPA" name="FileRPA" placeholder="Choose your file" value="" required="" tabindex="3"
                       accept=".py">
                <div class="invalid-feedback">
                    Valid last name is required.
                </div>
            </div>
        </div>

        <hr class="my-4">
        <label>Days of week</label>
        <div id="checkboxesDaysWeek" style="width: 30em; overflow-x: auto; white-space: nowrap;">


            @for (int i = 0; i < Model.dayWeek.Length; i++)
            {
                bool bandera = true;
                @for (int j = 0; j < Model.listRPADaysWeek.Count(); j++)
                {
                    if (Model.listRPADaysWeek[j].DayWeekName == @Model.dayWeek[i])
                    {
                        <input type="checkbox" value="Model.listRPADaysWeek[j].DayWeek" checked>@Model.dayWeek[i]
                        j = Model.listRPADaysWeek.Count();
                        bandera = false;
                    }
                }
                if (bandera)
                {
                    <input type="checkbox" value="@i">@Model.dayWeek[i]
                }

            }
            <input type="hidden" name="DaysWeek" id="DaysWeek" value="" />
        </div>

        <hr class="my-4">
        <label>Hours</label>
        <div id="checkboxesHours" style="text-align: left; width: 30em; overflow-x: auto; white-space: nowrap;">
            @for (int i = 0; i < 24; i++)
            {
                String hourCheck = i.ToString("00");
                for (int j = 0; j <= 30; j = j + 30)
                {
                    String minu = hourCheck + ":" + j.ToString("00");
                    bool bandera2 = true;
                    foreach (var item in Model.listRpaHours)
                    {
                        if (item.hourEx == minu)
                        {
                            <input type="checkbox" value="@minu" checked> @minu
                            bandera2 = false;
                        }
                    }
                    if (bandera2)
                    {
                        <input type="checkbox" value="@minu" > @minu
                    }

                }
            }
            <input type="hidden" name="Hours" id="Hours" value="" />
        </div>

        <hr class="my-4">
    </form>
    <button class="w-100 btn btn-primary btn-lg" onclick="enviar()">Create</button>
</div>
<script>
    function enviar() {
        $('#checkboxesDaysWeek input[type=checkbox]:checked').each(function () {
            var newval = $('#DaysWeek').val() + "," + $(this).val();
            $('#DaysWeek').val(newval);
        });
        var DaysWeek = $('#DaysWeek').val();
        $('#DaysWeek').val(DaysWeek.substr(1, DaysWeek.length));


        $('#checkboxesHours input[type=checkbox]:checked').each(function () {
            var newval = $('#Hours').val() + "," + $(this).val();
            $('#Hours').val(newval);
        });
        var Hours = $('#Hours').val();
        $('#Hours').val(Hours.substr(1, Hours.length));

        var data = new FormData($('#formRPA')[0]); //nombre del formulario
        AjaxPost('@Url.Action("InsertRPA", "RPA")', data);
        $('#Hours').val("");
        $('#DaysWeek').val("");
    }

    function AjaxPost(url, data) {
        $.ajax({
            url: url, //nombre de la funcion del controlador para traer informacion
            type: 'POST',
            dataType: 'HTML',
            data: data,
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                $('#message').html('');
            },
            success: function (response) {
                $('#loading').hide();
                $('#message').html(response);
                $('#text').val("");
                dataHCS = [];
                flag = true;
                Swal.fire({
                    type: 'success',
                    title: 'Good job',
                    text: 'Finish process'
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */

                    location.reload();

                });

            }, error: function (request, textStatus, errorThrown) {
                console.log(request);
                Swal.fire({
                    title: 'Error!',
                    html: '' + 'Status:' + textStatus + ' Error: ' + errorThrown + ' Request: ' + request.responseText,
                    type: 'error',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Ok!'
                });
            }
        });
    }
</script>